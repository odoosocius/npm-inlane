/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {DeviceGlobalStatusEnum} from './DeviceGlobalStatusEnum';
import {TrayStatusEnum} from './TrayStatusEnum';

/**
 * The ModuleStatus model module.
 * @module model/ModuleStatus
 * @version v1
 */
export class ModuleStatus {
  /**
   * Constructs a new <code>ModuleStatus</code>.
   * @alias module:model/ModuleStatus
   * @class
   * @param errorArea {String} Area where an error occurred
   * @param deviceErrorCode {String} Module error code
   * @param coverOpened {Boolean} Cover Opened
   * @param cleaningNecessary {Boolean} Necessary to clean the sensors of the module
   * @param inTrayStatus {module:model/TrayStatusEnum} 
   * @param outTrayStatus {module:model/TrayStatusEnum} 
   * @param status {module:model/DeviceGlobalStatusEnum} 
   */
  constructor(errorArea, deviceErrorCode, coverOpened, cleaningNecessary, inTrayStatus, outTrayStatus, status) {
    this.errorArea = errorArea;
    this.deviceErrorCode = deviceErrorCode;
    this.coverOpened = coverOpened;
    this.cleaningNecessary = cleaningNecessary;
    this.inTrayStatus = inTrayStatus;
    this.outTrayStatus = outTrayStatus;
    this.status = status;
  }

  /**
   * Constructs a <code>ModuleStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModuleStatus} obj Optional instance to populate.
   * @return {module:model/ModuleStatus} The populated <code>ModuleStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ModuleStatus();
      if (data.hasOwnProperty('errorArea'))
        obj.errorArea = ApiClient.convertToType(data['errorArea'], 'String');
      if (data.hasOwnProperty('deviceErrorCode'))
        obj.deviceErrorCode = ApiClient.convertToType(data['deviceErrorCode'], 'String');
      if (data.hasOwnProperty('coverOpened'))
        obj.coverOpened = ApiClient.convertToType(data['coverOpened'], 'Boolean');
      if (data.hasOwnProperty('cleaningNecessary'))
        obj.cleaningNecessary = ApiClient.convertToType(data['cleaningNecessary'], 'Boolean');
      if (data.hasOwnProperty('inTrayStatus'))
        obj.inTrayStatus = TrayStatusEnum.constructFromObject(data['inTrayStatus']);
      if (data.hasOwnProperty('outTrayStatus'))
        obj.outTrayStatus = TrayStatusEnum.constructFromObject(data['outTrayStatus']);
      if (data.hasOwnProperty('status'))
        obj.status = DeviceGlobalStatusEnum.constructFromObject(data['status']);
    }
    return obj;
  }
}

/**
 * Area where an error occurred
 * @member {String} errorArea
 */
ModuleStatus.prototype.errorArea = undefined;

/**
 * Module error code
 * @member {String} deviceErrorCode
 */
ModuleStatus.prototype.deviceErrorCode = undefined;

/**
 * Cover Opened
 * @member {Boolean} coverOpened
 */
ModuleStatus.prototype.coverOpened = undefined;

/**
 * Necessary to clean the sensors of the module
 * @member {Boolean} cleaningNecessary
 */
ModuleStatus.prototype.cleaningNecessary = undefined;

/**
 * @member {module:model/TrayStatusEnum} inTrayStatus
 */
ModuleStatus.prototype.inTrayStatus = undefined;

/**
 * @member {module:model/TrayStatusEnum} outTrayStatus
 */
ModuleStatus.prototype.outTrayStatus = undefined;

/**
 * @member {module:model/DeviceGlobalStatusEnum} status
 */
ModuleStatus.prototype.status = undefined;

