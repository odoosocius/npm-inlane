/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CommandFailedResponse} from '../model/CommandFailedResponse';
import {ProblemDetails} from '../model/ProblemDetails';
import {TransactionResponse} from '../model/TransactionResponse';

/**
* Transactions service.
* @module api/TransactionsApi
* @version v1
*/
export class TransactionsApi {

    /**
    * Constructs a new TransactionsApi. 
    * @alias module:api/TransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1TransactionsGet operation.
     * @callback moduleapi/TransactionsApi~apiV1TransactionsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TransactionResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the details of a single committed transaction by id or by reference
     * Request to get the details of a single committed transaction by id or by reference (so only transaction already finished).  If both id and reference are defined in the request, it will return a transaction only if exists a transaction with that id AND that reference.  So it is easier to use in the request or transaction id or transaction reference, not both.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.transactionId transaction id
     * @param {String} opts.transactionRef transaction reference
     * @param {module:api/TransactionsApi~apiV1TransactionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1TransactionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'transactionId': opts['transactionId'],'transactionRef': opts['transactionRef']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TransactionResponse;

      return this.apiClient.callApi(
        '/api/v1/Transactions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}