/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CommandFailedResponse} from '../model/CommandFailedResponse';
import {PaymentOperationStatus} from '../model/PaymentOperationStatus';
import {ProblemDetails} from '../model/ProblemDetails';
import {StartOperationResponse} from '../model/StartOperationResponse';
import {StartPaymentReqData} from '../model/StartPaymentReqData';
import {StopPaymentReqData} from '../model/StopPaymentReqData';

/**
* Payment service.
* @module api/PaymentApi
* @version v1
*/
export class PaymentApi {

    /**
    * Constructs a new PaymentApi. 
    * @alias module:api/PaymentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1OperationPaymentEndPost operation.
     * @callback moduleapi/PaymentApi~apiV1OperationPaymentEndPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stop the payment operation during the deposit phase
     * Request to stop the payment operation in progress during the deposit phase. The deposited cash will not be returned to the user.
     * @param {Object} opts Optional parameters
     * @param {module:model/StopPaymentReqData} opts.body Object containing the parameter to enable the rollback of the deposited amount
     * @param {module:api/PaymentApi~apiV1OperationPaymentEndPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1OperationPaymentEndPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/v1/operation/Payment/end', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1OperationPaymentStartPost operation.
     * @callback moduleapi/PaymentApi~apiV1OperationPaymentStartPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartOperationResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a new payment operation (from the deposit to the dispensation of the change if necessary)
     * Request to start a new payment operation.  This functionality allows to pay the amount passed as parameter.  It automatically manages the deposit phase, the calculation of the change and if necessary the withdrawal phase.  The payment flow will be automatically stopped if the web API does not receive any payment status request for more than 1 minute during the deposit phase.
     * @param {module:model/StartPaymentReqData} body Object containing the details about the sources, quantities and destination of this transfer operation
     * @param {Object} opts Optional parameters
     * @param {String} opts.transactionRef Optional text to be linked to the transaction (for example it could be the transaction identifier in the client application or the POS transaction identifier or the ticket identifier)
     * @param {module:api/PaymentApi~apiV1OperationPaymentStartPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationPaymentStartPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiV1OperationPaymentStartPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'transactionRef': opts['transactionRef']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['application/json'];
      let returnType = StartOperationResponse;

      return this.apiClient.callApi(
        '/api/v1/operation/Payment/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1OperationPaymentStatusGet operation.
     * @callback moduleapi/PaymentApi~apiV1OperationPaymentStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentOperationStatus{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the status of the payment operation
     * Request to retrieve the status of the payment operation, once the payment is started - minimum time between 2 requests 300ms
     * @param {module:api/PaymentApi~apiV1OperationPaymentStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationPaymentStatusGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentOperationStatus;

      return this.apiClient.callApi(
        '/api/v1/operation/Payment/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}