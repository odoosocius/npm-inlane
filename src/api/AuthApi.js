/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CommandFailedResponse} from '../model/CommandFailedResponse';
import {LoginRequest} from '../model/LoginRequest';
import {LoginResponse} from '../model/LoginResponse';

/**
* Auth service.
* @module api/AuthApi
* @version v1
*/
export class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1AuthLoginPost operation.
     * @callback moduleapi/AuthApi~apiV1AuthLoginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LoginResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Login a client app to the web api (Allowed requests without authentication token)
     * Functionality to obtain the authentication token. It will:  * check the appId passed as parameter if is the same configured in the device  * use the username to associate operations and handle the multiple parallels connections to the same InLane device (every connection can login with the same appId but different username)
     * @param {module:model/LoginRequest} body Object LoginRequest containing appId and username
     * @param {module:api/AuthApi~apiV1AuthLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1AuthLoginPost(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiV1AuthLoginPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LoginResponse;

      return this.apiClient.callApi(
        '/api/v1/Auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}