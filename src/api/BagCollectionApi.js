/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {BagCollectionOperationStatus} from '../model/BagCollectionOperationStatus';
import {CommandFailedResponse} from '../model/CommandFailedResponse';
import {ProblemDetails} from '../model/ProblemDetails';
import {StartBagCollectionReqData} from '../model/StartBagCollectionReqData';
import {StartOperationResponse} from '../model/StartOperationResponse';

/**
* BagCollection service.
* @module api/BagCollectionApi
* @version v1
*/
export class BagCollectionApi {

    /**
    * Constructs a new BagCollectionApi. 
    * @alias module:api/BagCollectionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1OperationBagCollectionStartPost operation.
     * @callback moduleapi/BagCollectionApi~apiV1OperationBagCollectionStartPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartOperationResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a new bag collection operation to change the bags inside the safe
     * Request to start a new bag collection operation. Functionality used to unlock the safe door, change the bags and reset their content.
     * @param {module:model/StartBagCollectionReqData} body Object containing the information about the types of bag/bags it would like to collect
     * @param {Object} opts Optional parameters
     * @param {String} opts.transactionRef Optional text to be linked to the transaction (for example it could be the transaction identifier in the client application or the POS transaction identifier or the ticket identifier)
     * @param {module:api/BagCollectionApi~apiV1OperationBagCollectionStartPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationBagCollectionStartPost(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling apiV1OperationBagCollectionStartPost");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'transactionRef': opts['transactionRef']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['application/json'];
      let returnType = StartOperationResponse;

      return this.apiClient.callApi(
        '/api/v1/operation/BagCollection/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1OperationBagCollectionStatusGet operation.
     * @callback moduleapi/BagCollectionApi~apiV1OperationBagCollectionStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BagCollectionOperationStatus{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the status of the bag collection operation
     * Request to retrieve the status of the bag collection operation, once the bag collection is started - minimum time between 2 requests 300ms
     * @param {module:api/BagCollectionApi~apiV1OperationBagCollectionStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationBagCollectionStatusGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BagCollectionOperationStatus;

      return this.apiClient.callApi(
        '/api/v1/operation/BagCollection/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}