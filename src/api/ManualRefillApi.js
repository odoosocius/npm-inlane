/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CashContent} from '../model/CashContent';
import {CommandFailedResponse} from '../model/CommandFailedResponse';
import {ManualRefillOperationStatus} from '../model/ManualRefillOperationStatus';
import {ProblemDetails} from '../model/ProblemDetails';
import {StartOperationResponse} from '../model/StartOperationResponse';

/**
* ManualRefill service.
* @module api/ManualRefillApi
* @version v1
*/
export class ManualRefillApi {

    /**
    * Constructs a new ManualRefillApi. 
    * @alias module:api/ManualRefillApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiV1OperationManualRefillNewContentPost operation.
     * @callback moduleapi/ManualRefillApi~apiV1OperationManualRefillNewContentPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Command to send the new content to the machine
     * It is required to send this command when the manualReillOperationStatus is ManualRefillStatusEnum.WaitNewContent to set the new device status  New content example  POST request to save new datetime on the machine. Sample request:        POST api/v1/operation/manualRefile/newContent      [         {            \&quot;denomination\&quot;:{               \&quot;currency\&quot;:\&quot;CIM\&quot;,               \&quot;value\&quot;:5,               \&quot;cashType\&quot;:\&quot;banknote\&quot;            },            \&quot;quantity\&quot;:5,            \&quot;stockIndex\&quot;:3         },         {            \&quot;denomination\&quot;:{               \&quot;currency\&quot;:\&quot;CIM\&quot;,               \&quot;value\&quot;:20,               \&quot;cashType\&quot;:\&quot;banknote\&quot;            },            \&quot;quantity\&quot;:-3,            \&quot;stockIndex\&quot;:3         },         {            \&quot;denomination\&quot;:{               \&quot;currency\&quot;:\&quot;EUR\&quot;,               \&quot;value\&quot;:0.01,               \&quot;cashType\&quot;:\&quot;coin\&quot;            },            \&quot;quantity\&quot;:-3,            \&quot;stockIndex\&quot;:5         }      ]
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/CashContent>} opts.body 
     * @param {module:api/ManualRefillApi~apiV1OperationManualRefillNewContentPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1OperationManualRefillNewContentPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/v1/operation/ManualRefill/newContent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1OperationManualRefillStartPost operation.
     * @callback moduleapi/ManualRefillApi~apiV1OperationManualRefillStartPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartOperationResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start a new manual refill operation to change manually the device content
     * Request to start a new manual refill operation, to manually change the device content
     * @param {Object} opts Optional parameters
     * @param {String} opts.transactionRef Optional text to be linked to the transaction (for example it could be the transaction identifier in the client application or the POS transaction identifier or the ticket identifier)
     * @param {module:api/ManualRefillApi~apiV1OperationManualRefillStartPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationManualRefillStartPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'transactionRef': opts['transactionRef']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StartOperationResponse;

      return this.apiClient.callApi(
        '/api/v1/operation/ManualRefill/start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiV1OperationManualRefillStatusGet operation.
     * @callback moduleapi/ManualRefillApi~apiV1OperationManualRefillStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ManualRefillOperationStatus{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the status of the manual refill operation
     * Request to retrieve the status of the manual refill operation
     * @param {module:api/ManualRefillApi~apiV1OperationManualRefillStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    apiV1OperationManualRefillStatusGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ManualRefillOperationStatus;

      return this.apiClient.callApi(
        '/api/v1/operation/ManualRefill/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}