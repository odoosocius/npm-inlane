/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {ApiVersionInfo} from './model/ApiVersionInfo';
import {BagCollectionOperationStatus} from './model/BagCollectionOperationStatus';
import {BagCollectionStatusEnum} from './model/BagCollectionStatusEnum';
import {BagCollectionTypeEnum} from './model/BagCollectionTypeEnum';
import {BanknoteBagTypeEnum} from './model/BanknoteBagTypeEnum';
import {BanknotesModuleInfo} from './model/BanknotesModuleInfo';
import {CashContent} from './model/CashContent';
import {CashCount} from './model/CashCount';
import {CashDetail} from './model/CashDetail';
import {CashMediaType} from './model/CashMediaType';
import {CassetteCollectionOperationStatus} from './model/CassetteCollectionOperationStatus';
import {CassetteCollectionStatusEnum} from './model/CassetteCollectionStatusEnum';
import {CoinBagTypeEnum} from './model/CoinBagTypeEnum';
import {CoinsModuleInfo} from './model/CoinsModuleInfo';
import {CommandFailedResponse} from './model/CommandFailedResponse';
import {ContentAlert} from './model/ContentAlert';
import {CountingType} from './model/CountingType';
import {CurrencyAmount} from './model/CurrencyAmount';
import {CurrencyString} from './model/CurrencyString';
import {Denomination} from './model/Denomination';
import {DenominationConfig} from './model/DenominationConfig';
import {DepositStatus} from './model/DepositStatus';
import {DeviceContentDetail} from './model/DeviceContentDetail';
import {DeviceContentResponse} from './model/DeviceContentResponse';
import {DeviceCountingDetail} from './model/DeviceCountingDetail';
import {DeviceCountingResponse} from './model/DeviceCountingResponse';
import {DeviceGlobalStatusEnum} from './model/DeviceGlobalStatusEnum';
import {DeviceInfo} from './model/DeviceInfo';
import {DeviceInfoResponse} from './model/DeviceInfoResponse';
import {DeviceStatus} from './model/DeviceStatus';
import {DeviceStatusResponse} from './model/DeviceStatusResponse';
import {DispenseStatus} from './model/DispenseStatus';
import {DoorConfigurationEnum} from './model/DoorConfigurationEnum';
import {DoorStatus} from './model/DoorStatus';
import {DoorTypeEnum} from './model/DoorTypeEnum';
import {EmptyOutOperationStatus} from './model/EmptyOutOperationStatus';
import {ErrorCode} from './model/ErrorCode';
import {ExchangeRate} from './model/ExchangeRate';
import {KitDenomination} from './model/KitDenomination';
import {LoginRequest} from './model/LoginRequest';
import {LoginResponse} from './model/LoginResponse';
import {ManualRefillOperationStatus} from './model/ManualRefillOperationStatus';
import {ManualRefillStatusEnum} from './model/ManualRefillStatusEnum';
import {MinimumKitConfiguration} from './model/MinimumKitConfiguration';
import {ModuleStatus} from './model/ModuleStatus';
import {OperationAvailabilityEnum} from './model/OperationAvailabilityEnum';
import {OperationStatus} from './model/OperationStatus';
import {OperationStatusEnum} from './model/OperationStatusEnum';
import {PaymentOperationStatus} from './model/PaymentOperationStatus';
import {PaymentStatusEnum} from './model/PaymentStatusEnum';
import {ProblemDetails} from './model/ProblemDetails';
import {RefillOperationStatus} from './model/RefillOperationStatus';
import {StartBagCollectionReqData} from './model/StartBagCollectionReqData';
import {StartEmptyOutReqData} from './model/StartEmptyOutReqData';
import {StartOperationResponse} from './model/StartOperationResponse';
import {StartPaymentReqData} from './model/StartPaymentReqData';
import {StartTransferAllButKitClientReqData} from './model/StartTransferAllButKitClientReqData';
import {StartTransferReqData} from './model/StartTransferReqData';
import {StockConfiguration} from './model/StockConfiguration';
import {StockStatus} from './model/StockStatus';
import {StockStatusEnum} from './model/StockStatusEnum';
import {StockTypeEnum} from './model/StockTypeEnum';
import {StockWorkmodeEnum} from './model/StockWorkmodeEnum';
import {StopPaymentReqData} from './model/StopPaymentReqData';
import {TransactionCountings} from './model/TransactionCountings';
import {TransactionResponse} from './model/TransactionResponse';
import {TransactionTotals} from './model/TransactionTotals';
import {TransactionTypeEnum} from './model/TransactionTypeEnum';
import {TransferAllButKitOperationStatus} from './model/TransferAllButKitOperationStatus';
import {TransferOperationStatus} from './model/TransferOperationStatus';
import {TransferSource} from './model/TransferSource';
import {TrayStatusEnum} from './model/TrayStatusEnum';
import {WithdrawalOperationStatus} from './model/WithdrawalOperationStatus';
import {AuthApi} from './api/AuthApi';
import {BagCollectionApi} from './api/BagCollectionApi';
import {CassetteCollectionApi} from './api/CassetteCollectionApi';
import {ContentApi} from './api/ContentApi';
import {DeviceInfoApi} from './api/DeviceInfoApi';
import {EmptyOutApi} from './api/EmptyOutApi';
import {ManualRefillApi} from './api/ManualRefillApi';
import {PaymentApi} from './api/PaymentApi';
import {RefillApi} from './api/RefillApi';
import {ResetApi} from './api/ResetApi';
import {StatusApi} from './api/StatusApi';
import {TransactionsApi} from './api/TransactionsApi';
import {TransferApi} from './api/TransferApi';
import {TransferAllButKitApi} from './api/TransferAllButKitApi';
import {WithdrawalApi} from './api/WithdrawalApi';

/**
* InLane_communication_Web_Api.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var InLaneApi = require('index'); // See note below*.
* var xxxSvc = new InLaneApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new InLaneApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new InLaneApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new InLaneApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiVersionInfo model constructor.
     * @property {module:model/ApiVersionInfo}
     */
    ApiVersionInfo,

    /**
     * The BagCollectionOperationStatus model constructor.
     * @property {module:model/BagCollectionOperationStatus}
     */
    BagCollectionOperationStatus,

    /**
     * The BagCollectionStatusEnum model constructor.
     * @property {module:model/BagCollectionStatusEnum}
     */
    BagCollectionStatusEnum,

    /**
     * The BagCollectionTypeEnum model constructor.
     * @property {module:model/BagCollectionTypeEnum}
     */
    BagCollectionTypeEnum,

    /**
     * The BanknoteBagTypeEnum model constructor.
     * @property {module:model/BanknoteBagTypeEnum}
     */
    BanknoteBagTypeEnum,

    /**
     * The BanknotesModuleInfo model constructor.
     * @property {module:model/BanknotesModuleInfo}
     */
    BanknotesModuleInfo,

    /**
     * The CashContent model constructor.
     * @property {module:model/CashContent}
     */
    CashContent,

    /**
     * The CashCount model constructor.
     * @property {module:model/CashCount}
     */
    CashCount,

    /**
     * The CashDetail model constructor.
     * @property {module:model/CashDetail}
     */
    CashDetail,

    /**
     * The CashMediaType model constructor.
     * @property {module:model/CashMediaType}
     */
    CashMediaType,

    /**
     * The CassetteCollectionOperationStatus model constructor.
     * @property {module:model/CassetteCollectionOperationStatus}
     */
    CassetteCollectionOperationStatus,

    /**
     * The CassetteCollectionStatusEnum model constructor.
     * @property {module:model/CassetteCollectionStatusEnum}
     */
    CassetteCollectionStatusEnum,

    /**
     * The CoinBagTypeEnum model constructor.
     * @property {module:model/CoinBagTypeEnum}
     */
    CoinBagTypeEnum,

    /**
     * The CoinsModuleInfo model constructor.
     * @property {module:model/CoinsModuleInfo}
     */
    CoinsModuleInfo,

    /**
     * The CommandFailedResponse model constructor.
     * @property {module:model/CommandFailedResponse}
     */
    CommandFailedResponse,

    /**
     * The ContentAlert model constructor.
     * @property {module:model/ContentAlert}
     */
    ContentAlert,

    /**
     * The CountingType model constructor.
     * @property {module:model/CountingType}
     */
    CountingType,

    /**
     * The CurrencyAmount model constructor.
     * @property {module:model/CurrencyAmount}
     */
    CurrencyAmount,

    /**
     * The CurrencyString model constructor.
     * @property {module:model/CurrencyString}
     */
    CurrencyString,

    /**
     * The Denomination model constructor.
     * @property {module:model/Denomination}
     */
    Denomination,

    /**
     * The DenominationConfig model constructor.
     * @property {module:model/DenominationConfig}
     */
    DenominationConfig,

    /**
     * The DepositStatus model constructor.
     * @property {module:model/DepositStatus}
     */
    DepositStatus,

    /**
     * The DeviceContentDetail model constructor.
     * @property {module:model/DeviceContentDetail}
     */
    DeviceContentDetail,

    /**
     * The DeviceContentResponse model constructor.
     * @property {module:model/DeviceContentResponse}
     */
    DeviceContentResponse,

    /**
     * The DeviceCountingDetail model constructor.
     * @property {module:model/DeviceCountingDetail}
     */
    DeviceCountingDetail,

    /**
     * The DeviceCountingResponse model constructor.
     * @property {module:model/DeviceCountingResponse}
     */
    DeviceCountingResponse,

    /**
     * The DeviceGlobalStatusEnum model constructor.
     * @property {module:model/DeviceGlobalStatusEnum}
     */
    DeviceGlobalStatusEnum,

    /**
     * The DeviceInfo model constructor.
     * @property {module:model/DeviceInfo}
     */
    DeviceInfo,

    /**
     * The DeviceInfoResponse model constructor.
     * @property {module:model/DeviceInfoResponse}
     */
    DeviceInfoResponse,

    /**
     * The DeviceStatus model constructor.
     * @property {module:model/DeviceStatus}
     */
    DeviceStatus,

    /**
     * The DeviceStatusResponse model constructor.
     * @property {module:model/DeviceStatusResponse}
     */
    DeviceStatusResponse,

    /**
     * The DispenseStatus model constructor.
     * @property {module:model/DispenseStatus}
     */
    DispenseStatus,

    /**
     * The DoorConfigurationEnum model constructor.
     * @property {module:model/DoorConfigurationEnum}
     */
    DoorConfigurationEnum,

    /**
     * The DoorStatus model constructor.
     * @property {module:model/DoorStatus}
     */
    DoorStatus,

    /**
     * The DoorTypeEnum model constructor.
     * @property {module:model/DoorTypeEnum}
     */
    DoorTypeEnum,

    /**
     * The EmptyOutOperationStatus model constructor.
     * @property {module:model/EmptyOutOperationStatus}
     */
    EmptyOutOperationStatus,

    /**
     * The ErrorCode model constructor.
     * @property {module:model/ErrorCode}
     */
    ErrorCode,

    /**
     * The ExchangeRate model constructor.
     * @property {module:model/ExchangeRate}
     */
    ExchangeRate,

    /**
     * The KitDenomination model constructor.
     * @property {module:model/KitDenomination}
     */
    KitDenomination,

    /**
     * The LoginRequest model constructor.
     * @property {module:model/LoginRequest}
     */
    LoginRequest,

    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse,

    /**
     * The ManualRefillOperationStatus model constructor.
     * @property {module:model/ManualRefillOperationStatus}
     */
    ManualRefillOperationStatus,

    /**
     * The ManualRefillStatusEnum model constructor.
     * @property {module:model/ManualRefillStatusEnum}
     */
    ManualRefillStatusEnum,

    /**
     * The MinimumKitConfiguration model constructor.
     * @property {module:model/MinimumKitConfiguration}
     */
    MinimumKitConfiguration,

    /**
     * The ModuleStatus model constructor.
     * @property {module:model/ModuleStatus}
     */
    ModuleStatus,

    /**
     * The OperationAvailabilityEnum model constructor.
     * @property {module:model/OperationAvailabilityEnum}
     */
    OperationAvailabilityEnum,

    /**
     * The OperationStatus model constructor.
     * @property {module:model/OperationStatus}
     */
    OperationStatus,

    /**
     * The OperationStatusEnum model constructor.
     * @property {module:model/OperationStatusEnum}
     */
    OperationStatusEnum,

    /**
     * The PaymentOperationStatus model constructor.
     * @property {module:model/PaymentOperationStatus}
     */
    PaymentOperationStatus,

    /**
     * The PaymentStatusEnum model constructor.
     * @property {module:model/PaymentStatusEnum}
     */
    PaymentStatusEnum,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The RefillOperationStatus model constructor.
     * @property {module:model/RefillOperationStatus}
     */
    RefillOperationStatus,

    /**
     * The StartBagCollectionReqData model constructor.
     * @property {module:model/StartBagCollectionReqData}
     */
    StartBagCollectionReqData,

    /**
     * The StartEmptyOutReqData model constructor.
     * @property {module:model/StartEmptyOutReqData}
     */
    StartEmptyOutReqData,

    /**
     * The StartOperationResponse model constructor.
     * @property {module:model/StartOperationResponse}
     */
    StartOperationResponse,

    /**
     * The StartPaymentReqData model constructor.
     * @property {module:model/StartPaymentReqData}
     */
    StartPaymentReqData,

    /**
     * The StartTransferAllButKitClientReqData model constructor.
     * @property {module:model/StartTransferAllButKitClientReqData}
     */
    StartTransferAllButKitClientReqData,

    /**
     * The StartTransferReqData model constructor.
     * @property {module:model/StartTransferReqData}
     */
    StartTransferReqData,

    /**
     * The StockConfiguration model constructor.
     * @property {module:model/StockConfiguration}
     */
    StockConfiguration,

    /**
     * The StockStatus model constructor.
     * @property {module:model/StockStatus}
     */
    StockStatus,

    /**
     * The StockStatusEnum model constructor.
     * @property {module:model/StockStatusEnum}
     */
    StockStatusEnum,

    /**
     * The StockTypeEnum model constructor.
     * @property {module:model/StockTypeEnum}
     */
    StockTypeEnum,

    /**
     * The StockWorkmodeEnum model constructor.
     * @property {module:model/StockWorkmodeEnum}
     */
    StockWorkmodeEnum,

    /**
     * The StopPaymentReqData model constructor.
     * @property {module:model/StopPaymentReqData}
     */
    StopPaymentReqData,

    /**
     * The TransactionCountings model constructor.
     * @property {module:model/TransactionCountings}
     */
    TransactionCountings,

    /**
     * The TransactionResponse model constructor.
     * @property {module:model/TransactionResponse}
     */
    TransactionResponse,

    /**
     * The TransactionTotals model constructor.
     * @property {module:model/TransactionTotals}
     */
    TransactionTotals,

    /**
     * The TransactionTypeEnum model constructor.
     * @property {module:model/TransactionTypeEnum}
     */
    TransactionTypeEnum,

    /**
     * The TransferAllButKitOperationStatus model constructor.
     * @property {module:model/TransferAllButKitOperationStatus}
     */
    TransferAllButKitOperationStatus,

    /**
     * The TransferOperationStatus model constructor.
     * @property {module:model/TransferOperationStatus}
     */
    TransferOperationStatus,

    /**
     * The TransferSource model constructor.
     * @property {module:model/TransferSource}
     */
    TransferSource,

    /**
     * The TrayStatusEnum model constructor.
     * @property {module:model/TrayStatusEnum}
     */
    TrayStatusEnum,

    /**
     * The WithdrawalOperationStatus model constructor.
     * @property {module:model/WithdrawalOperationStatus}
     */
    WithdrawalOperationStatus,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The BagCollectionApi service constructor.
    * @property {module:api/BagCollectionApi}
    */
    BagCollectionApi,

    /**
    * The CassetteCollectionApi service constructor.
    * @property {module:api/CassetteCollectionApi}
    */
    CassetteCollectionApi,

    /**
    * The ContentApi service constructor.
    * @property {module:api/ContentApi}
    */
    ContentApi,

    /**
    * The DeviceInfoApi service constructor.
    * @property {module:api/DeviceInfoApi}
    */
    DeviceInfoApi,

    /**
    * The EmptyOutApi service constructor.
    * @property {module:api/EmptyOutApi}
    */
    EmptyOutApi,

    /**
    * The ManualRefillApi service constructor.
    * @property {module:api/ManualRefillApi}
    */
    ManualRefillApi,

    /**
    * The PaymentApi service constructor.
    * @property {module:api/PaymentApi}
    */
    PaymentApi,

    /**
    * The RefillApi service constructor.
    * @property {module:api/RefillApi}
    */
    RefillApi,

    /**
    * The ResetApi service constructor.
    * @property {module:api/ResetApi}
    */
    ResetApi,

    /**
    * The StatusApi service constructor.
    * @property {module:api/StatusApi}
    */
    StatusApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

    /**
    * The TransferApi service constructor.
    * @property {module:api/TransferApi}
    */
    TransferApi,

    /**
    * The TransferAllButKitApi service constructor.
    * @property {module:api/TransferAllButKitApi}
    */
    TransferAllButKitApi,

    /**
    * The WithdrawalApi service constructor.
    * @property {module:api/WithdrawalApi}
    */
    WithdrawalApi
};
