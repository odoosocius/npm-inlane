/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InLaneApi);
  }
}(this, function(expect, InLaneApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CoinsModuleInfo', function() {
      beforeEach(function() {
        instance = new InLaneApi.CoinsModuleInfo();
      });

      it('should create an instance of CoinsModuleInfo', function() {
        // TODO: update the code to test CoinsModuleInfo
        expect(instance).to.be.a(InLaneApi.CoinsModuleInfo);
      });

      it('should have the property model (base name: "model")', function() {
        // TODO: update the code to test the property model
        expect(instance).to.have.property('model');
        // expect(instance.model).to.be(expectedValueLiteral);
      });

      it('should have the property serialNumber (base name: "serialNumber")', function() {
        // TODO: update the code to test the property serialNumber
        expect(instance).to.have.property('serialNumber');
        // expect(instance.serialNumber).to.be(expectedValueLiteral);
      });

      it('should have the property firmware (base name: "firmware")', function() {
        // TODO: update the code to test the property firmware
        expect(instance).to.have.property('firmware');
        // expect(instance.firmware).to.be(expectedValueLiteral);
      });

      it('should have the property sensorFirmware (base name: "sensorFirmware")', function() {
        // TODO: update the code to test the property sensorFirmware
        expect(instance).to.have.property('sensorFirmware');
        // expect(instance.sensorFirmware).to.be(expectedValueLiteral);
      });

      it('should have the property bag (base name: "bag")', function() {
        // TODO: update the code to test the property bag
        expect(instance).to.have.property('bag');
        // expect(instance.bag).to.be(expectedValueLiteral);
      });

    });
  });

}));
