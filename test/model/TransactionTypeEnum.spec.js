/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InLaneApi);
  }
}(this, function(expect, InLaneApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TransactionTypeEnum', function() {
      beforeEach(function() {
        instance = InLaneApi.TransactionTypeEnum;
      });

      it('should create an instance of TransactionTypeEnum', function() {
        // TODO: update the code to test TransactionTypeEnum
        expect(instance).to.be.a('object');
      });

      it('should have the property bagCollection', function() {
        expect(instance).to.have.property('bagCollection');
        expect(instance.bagCollection).to.be("bagCollection");
      });

      it('should have the property cassetteCollection', function() {
        expect(instance).to.have.property('cassetteCollection');
        expect(instance.cassetteCollection).to.be("cassetteCollection");
      });

      it('should have the property emptyOut', function() {
        expect(instance).to.have.property('emptyOut');
        expect(instance.emptyOut).to.be("emptyOut");
      });

      it('should have the property manualRefill', function() {
        expect(instance).to.have.property('manualRefill');
        expect(instance.manualRefill).to.be("manualRefill");
      });

      it('should have the property payment', function() {
        expect(instance).to.have.property('payment');
        expect(instance.payment).to.be("payment");
      });

      it('should have the property refill', function() {
        expect(instance).to.have.property('refill');
        expect(instance.refill).to.be("refill");
      });

      it('should have the property transfer', function() {
        expect(instance).to.have.property('transfer');
        expect(instance.transfer).to.be("transfer");
      });

      it('should have the property withdrawal', function() {
        expect(instance).to.have.property('withdrawal');
        expect(instance.withdrawal).to.be("withdrawal");
      });

      it('should have the property changedContent', function() {
        expect(instance).to.have.property('changedContent');
        expect(instance.changedContent).to.be("changedContent");
      });

      it('should have the property none', function() {
        expect(instance).to.have.property('none');
        expect(instance.none).to.be("none");
      });

    });
  });

}));
