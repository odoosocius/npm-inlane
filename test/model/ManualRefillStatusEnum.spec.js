/*
 * InLane API
 * InLane communication Web Api
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InLaneApi);
  }
}(this, function(expect, InLaneApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ManualRefillStatusEnum', function() {
      beforeEach(function() {
        instance = InLaneApi.ManualRefillStatusEnum;
      });

      it('should create an instance of ManualRefillStatusEnum', function() {
        // TODO: update the code to test ManualRefillStatusEnum
        expect(instance).to.be.a('object');
      });

      it('should have the property waitRefillDoorOpen', function() {
        expect(instance).to.have.property('waitRefillDoorOpen');
        expect(instance.waitRefillDoorOpen).to.be("waitRefillDoorOpen");
      });

      it('should have the property waitRefillDoorClose', function() {
        expect(instance).to.have.property('waitRefillDoorClose');
        expect(instance.waitRefillDoorClose).to.be("waitRefillDoorClose");
      });

      it('should have the property waitNewContent', function() {
        expect(instance).to.have.property('waitNewContent');
        expect(instance.waitNewContent).to.be("waitNewContent");
      });

      it('should have the property writingNewContent', function() {
        expect(instance).to.have.property('writingNewContent');
        expect(instance.writingNewContent).to.be("writingNewContent");
      });

      it('should have the property completed', function() {
        expect(instance).to.have.property('completed');
        expect(instance.completed).to.be("completed");
      });

      it('should have the property faulted', function() {
        expect(instance).to.have.property('faulted');
        expect(instance.faulted).to.be("faulted");
      });

    });
  });

}));
